//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AssemblyInfoUtil.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AssemblyInfoUtil.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {4}The format of the version string fed into method {0} is invalid.{4}    The expected number of version substrings is {1}.{4}    The actual number of substrings is {2}.{4}    The version string is {3}.{4}.
        /// </summary>
        internal static string ERRMSG_VERSION_STRING_PARTS_COUNT {
            get {
                return ResourceManager.GetString("ERRMSG_VERSION_STRING_PARTS_COUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AssemblyCopyright.
        /// </summary>
        internal static string IDS_ASSEMBLYCOPYRIGHT {
            get {
                return ResourceManager.GetString("IDS_ASSEMBLYCOPYRIGHT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [assembly: AssemblyFileVersion.
        /// </summary>
        internal static string IDS_ASSEMBLYFILEVERSION_PREFIX {
            get {
                return ResourceManager.GetString("IDS_ASSEMBLYFILEVERSION_PREFIX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [assembly: AssemblyInformationalVersion.
        /// </summary>
        internal static string IDS_ASSEMBLYINFORMATIONALVERSION_PREFIX {
            get {
                return ResourceManager.GetString("IDS_ASSEMBLYINFORMATIONALVERSION_PREFIX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [assembly: AssemblyInformationalVersion ( {0} )].
        /// </summary>
        internal static string IDS_ASSEMBLYINFORMATIONALVERSION_TEMPLATE {
            get {
                return ResourceManager.GetString("IDS_ASSEMBLYINFORMATIONALVERSION_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [assembly: AssemblyVersion.
        /// </summary>
        internal static string IDS_ASSEMBLYVERSION_PREFIX {
            get {
                return ResourceManager.GetString("IDS_ASSEMBLYVERSION_PREFIX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright.
        /// </summary>
        internal static string IDS_COPYRIGHT {
            get {
                return ResourceManager.GetString("IDS_COPYRIGHT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AssemblyInformationalVersion added: {0}{1}.
        /// </summary>
        internal static string MSG_ASSEMBLYINFORMATIONALVERSION_ADDED {
            get {
                return ResourceManager.GetString("MSG_ASSEMBLYINFORMATIONALVERSION_ADDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AssemblyInformationalVersion updateded: {0}{1}.
        /// </summary>
        internal static string MSG_ASSEMBLYINFORMATIONALVERSION_UPDATED {
            get {
                return ResourceManager.GetString("MSG_ASSEMBLYINFORMATIONALVERSION_UPDATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please press Return to fully stop the program..
        /// </summary>
        internal static string MSG_AWAIT_CARBON_UNIT {
            get {
                return ResourceManager.GetString("MSG_AWAIT_CARBON_UNIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {2}Copyright Year Changed: Old Value = {0}{2}                        New Value = {1}{2}.
        /// </summary>
        internal static string MSG_COPYRIGHT_YEAR_CHANGE {
            get {
                return ResourceManager.GetString("MSG_COPYRIGHT_YEAR_CHANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1}The copyright year is a single year: {0}{1}.
        /// </summary>
        internal static string MSG_COPYRIGHT_YEAR_IS_SINGLE_YEAR {
            get {
                return ResourceManager.GetString("MSG_COPYRIGHT_YEAR_IS_SINGLE_YEAR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1}Copyright Year Unchanged: Current Value = {0}{1}.
        /// </summary>
        internal static string MSG_COPYRIGHT_YEAR_UNCHANGED {
            get {
                return ResourceManager.GetString("MSG_COPYRIGHT_YEAR_UNCHANGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {5}An {0} exception arose.{5}    Message   : {1}{5}    TargetSite: {2}{5}    Source    : {3}{5}    StackTrace: {4}{5}.
        /// </summary>
        internal static string MSG_ERR_RUNTIME {
            get {
                return ResourceManager.GetString("MSG_ERR_RUNTIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Can not find file {0}.
        /// </summary>
        internal static string MSG_FILE_NOT_FOUND {
            get {
                return ResourceManager.GetString("MSG_FILE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Increment value must be numeric.{1}       Specified value = {0}{1}.
        /// </summary>
        internal static string MSG_INCREMENT_MUST_BE_NUMERIC {
            get {
                return ResourceManager.GetString("MSG_INCREMENT_MUST_BE_NUMERIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Increment value must be between {0} and {1}.{3}       Specified value = {2}{3}.
        /// </summary>
        internal static string MSG_INCREMENT_OUT_OF_RANGE {
            get {
                return ResourceManager.GetString("MSG_INCREMENT_OUT_OF_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: The version substring at position {0} is invalid.{2}       Version substring = {1}{2}.
        /// </summary>
        internal static string MSG_INVALID_VERSION_SUBSTRING {
            get {
                return ResourceManager.GetString("MSG_INVALID_VERSION_SUBSTRING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replacing {0} version string {1} with {2}.
        /// </summary>
        internal static string MSG_NEW_VERSION_STRING {
            get {
                return ResourceManager.GetString("MSG_NEW_VERSION_STRING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: You must specify the name of the file to process.{0}.
        /// </summary>
        internal static string MSG_NO_FILENAME {
            get {
                return ResourceManager.GetString("MSG_NO_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing {0}:.
        /// </summary>
        internal static string MSG_PROCESSING_BEGIN {
            get {
                return ResourceManager.GetString("MSG_PROCESSING_BEGIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Done!.
        /// </summary>
        internal static string MSG_PROCESSING_DONE {
            get {
                return ResourceManager.GetString("MSG_PROCESSING_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}Since the project is unchanged, AssemblyInfo.cs remains unchanged and unexamined.{0}.
        /// </summary>
        internal static string MSG_PROJECT_IS_UNCHANGED {
            get {
                return ResourceManager.GetString("MSG_PROJECT_IS_UNCHANGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}Since the project is unchanged, AssemblyInfo.cs remains unchanged and unexamined.{0}.
        /// </summary>
        internal static string MSG_SOURCE_UNCHANGED {
            get {
                return ResourceManager.GetString("MSG_SOURCE_UNCHANGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, version {1}.{2},{5}{3} ({4} UTC){5}.
        /// </summary>
        internal static string MSG_START {
            get {
                return ResourceManager.GetString("MSG_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {4}{0} Done, {1} ({2} UTC){4}Running time = {3}.
        /// </summary>
        internal static string MSG_STOP {
            get {
                return ResourceManager.GetString("MSG_STOP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating the Copyright year if needed.
        /// </summary>
        internal static string MSG_UPDATING_ANSWER_COPYRIGHT_YEAR {
            get {
                return ResourceManager.GetString("MSG_UPDATING_ANSWER_COPYRIGHT_YEAR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating AssemblyFileVersion.
        /// </summary>
        internal static string MSG_UPDATING_ASMFVER {
            get {
                return ResourceManager.GetString("MSG_UPDATING_ASMFVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating AssemblyVersion.
        /// </summary>
        internal static string MSG_UPDATING_ASMVER {
            get {
                return ResourceManager.GetString("MSG_UPDATING_ASMVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating both AssemblyVersion and AssemblyFileVersion.
        /// </summary>
        internal static string MSG_UPDATING_ASMVER_AND_ASMFVER {
            get {
                return ResourceManager.GetString("MSG_UPDATING_ASMVER_AND_ASMFVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage: AssemblyInfoUtil &lt;path to AssemblyInfo.cs or AssemblyInfo.vb file&gt; [options]{0}.
        /// </summary>
        internal static string MSG_USAGE_1 {
            get {
                return ResourceManager.GetString("MSG_USAGE_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options: {0}&lt;new version number&gt; - set new version number (in NN.NN.NN.NN format).
        /// </summary>
        internal static string MSG_USAGE_2 {
            get {
                return ResourceManager.GetString("MSG_USAGE_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to          {0}&lt;parameter index&gt;    - increases the parameter with specified index (can be from 1 to 4)..
        /// </summary>
        internal static string MSG_USAGE_3 {
            get {
                return ResourceManager.GetString("MSG_USAGE_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to          {0}                       - Set the AssemblyVersion, leaving AssemblyFileVersion as is..
        /// </summary>
        internal static string MSG_USAGE_4 {
            get {
                return ResourceManager.GetString("MSG_USAGE_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to          {0}                       - Set the AssemblyFileVersion, leaving AssemblyVersion as is..
        /// </summary>
        internal static string MSG_USAGE_5 {
            get {
                return ResourceManager.GetString("MSG_USAGE_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}                     - Update the copyright year when hyphenated..
        /// </summary>
        internal static string MSG_USAGE_6 {
            get {
                return ResourceManager.GetString("MSG_USAGE_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to          {0}                     - Do nothing unless at least one file is newer than AssemblyInfo.cs or has its Archive flag set..
        /// </summary>
        internal static string MSG_USAGE_7 {
            get {
                return ResourceManager.GetString("MSG_USAGE_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         {0}                     - Stop and await RETURN key when done..
        /// </summary>
        internal static string MSG_USAGE_8 {
            get {
                return ResourceManager.GetString("MSG_USAGE_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {2}FileVersion Changed: Old Value = {0}{2}                     New Value = {1}{2}.
        /// </summary>
        internal static string MSG_VERSION_CHANGE {
            get {
                return ResourceManager.GetString("MSG_VERSION_CHANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incrementing {0} version string part {1} ({2}) from {3} to {4}, new version = {5}.
        /// </summary>
        internal static string MSG_VERSION_STRING_PART_INCR {
            get {
                return ResourceManager.GetString("MSG_VERSION_STRING_PART_INCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1}FileVersion Unchanged:    Current Value = {0}{1}.
        /// </summary>
        internal static string MSG_VERSION_UNCHANGED {
            get {
                return ResourceManager.GetString("MSG_VERSION_UNCHANGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .out.
        /// </summary>
        internal static string TEMP_FILENAME_EXTENSION {
            get {
                return ResourceManager.GetString("TEMP_FILENAME_EXTENSION", resourceCulture);
            }
        }
    }
}
